name: Release From Issue Command

on:
  repository_dispatch:
    types: [release-command]

jobs:
  validate:
    runs-on: ubuntu-latest
    outputs:
      release_type: ${{ steps.extract.outputs.release_type }}

    steps:
      - name: Extract bump type from command
        id: extract
        run: |
          RELEASE_TYPE="${{ github.event.client_payload.slash_command.args.unnamed.arg1 }}"
          ISSUE_NUMBER="${{ github.event.client_payload.github.payload.issue.number }}"

          echo "Parsed release type: $RELEASE_TYPE"
          echo "Parsed issue: $ISSUE_NUMBER"

          if [[ "$RELEASE_TYPE" != "patch" && "$RELEASE_TYPE" != "minor" && "$RELEASE_TYPE" != "major" ]]; then
            echo "❌ Invalid release type: $RELEASE_TYPE"
            exit 1
          fi

          echo "release_type=$RELEASE_TYPE" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    needs: validate
    uses: ./.github/workflows/release.yml
    with:
      release_type: ${{ needs.validate.outputs.release_type }}

  comment:
    name: Comment on Release Result
    needs: [validate, release]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Compose result title
        id: title
        run: |
          STATUS="${{ needs.release.result }}"
          if [ "$STATUS" = "success" ]; then
            echo "title=✅ **Release succeeded**" >> $GITHUB_OUTPUT
          else
            echo "title=❌ **Release failed**" >> $GITHUB_OUTPUT
          fi

      - name: Post release result comment
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          issue-number: ${{ github.event.client_payload.github.payload.issue.number }}
          body: |
            ${{ steps.title.outputs.title }}

            **Release Type**: `${{ needs.validate.outputs.release_type }}`
            **Version**: `v${{ needs.release.outputs.version }}`
            **Run**: [View workflow run](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
